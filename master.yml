apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: master
  namespace: archive
spec:
  selector:
    matchLabels:
      app: master
  serviceName: master
  replicas: 1
  template:
    metadata:
      labels:
        app: master
    spec:
      containers:
      - name: citus
        image: watchdg/citus:9
        imagePullPolicy: Always
        args: ['--config_file=/var/lib/postgresql/data/postgresql.conf']
        ports:
        - containerPort: 5432
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: secret
              key: password
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret
              key: password
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: storage
        - mountPath: /usr/share/postgresql/12/k8s/postgresql.conf
          name: master-postgresql-conf
          subPath: postgresql.conf
        - mountPath: /usr/share/postgresql/12/k8s/pg_hba.conf
          name: master-pg-hba-conf
          subPath: pg_hba.conf
        - mountPath: /docker-entrypoint-initdb.d/002-create-cstore-extension.sql
          name: master-partman-ext
          subPath: 002-create-cstore-extension.sql
        - mountPath: /docker-entrypoint-initdb.d/003-create-partman-extension.sql
          name: master-partman-ext
          subPath: 003-create-partman-extension.sql
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - cp /usr/share/postgresql/12/k8s/postgresql.conf /usr/share/postgresql/12/k8s/pg_hba.conf /var/lib/postgresql/data
        livenessProbe:
          exec:
            command:
            - ./pg_healthcheck
          initialDelaySeconds: 60
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: master-pvc
      - name: master-postgresql-conf
        configMap:
          name: master-config
          items:
            - key: postgresql.conf
              path: postgresql.conf
      - name: master-pg-hba-conf
        configMap:
          name: master-config
          items:
            - key: pg_hba.conf
              path: pg_hba.conf
      - name: master-cstore-ext
        configMap:
          name: master-config
          items:
            - key: 002-create-cstore-extension.sql
              path: 002-create-cstore-extension.sql
      - name: master-partman-ext
        configMap:
          name: master-config
          items:
            - key: 003-create-partman-extension.sql
              path: 003-create-partman-extension.sql

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: master-pvc
  namespace: archive
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: hcloud-volumes

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: master-config
  namespace: archive
data:
  pg_hba.conf: |
    #   TYPE        DATABASE      USER    ADDRESS       METHOD
        local       all           all                   trust
        host        all           all     all           md5
  postgresql.conf: |
    data_directory = '/var/lib/postgresql/data/pgdata'
    hba_file = '/var/lib/postgresql/data/pg_hba.conf'

    listen_addresses = '*'

    pg_partman_bgw.dbname='postgres'
    pg_partman_bgw.interval=86400
    pg_partman_bgw.role='postgres'
    pg_partman_bgw.analyze='off'
    pg_partman_bgw.jobmon='off'

    shared_preload_libraries='citus, cstore_fdw, pg_partman_bgw, pg_stat_statements'
  002-create-cstore-extension.sql: |
    BEGIN;
    CREATE EXTENSION cstore_fdw;
    COMMIT;
  003-create-partman-extension.sql: |
    BEGIN;
    CREATE SCHEMA partman;
    CREATE EXTENSION pg_partman SCHEMA partman;
    GRANT CREATE ON DATABASE postgres TO partman;
    COMMIT;